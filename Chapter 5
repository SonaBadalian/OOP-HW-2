import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        //No.1
        /*System.out.println("Enter an integer, the input ends if it is 0: ");
        int data = input.nextInt();
        int sum = 0;
        int numOfPositive = 0;
        int numOfNegative = 0;
        if (data == 0) {
            System.out.println("No numbers are entered except 0");
        } else {
            while (data != 0) {
                if (data < 0) {
                    numOfNegative++;
                } else {
                    numOfPositive++;
                }
                sum += data;
                System.out.println("Enter an integer, the input ends if it is 0: ");
                data = input.nextInt();
            }

        }
        double average = sum / (numOfNegative + numOfPositive);
        System.out.println(" The number of positives is  " + numOfPositive);
        System.out.println(" The number of negative is  " + numOfNegative);
        System.out.println("The total is " + sum);
        System.out.println("The total is " + sum);
        System.out.printf("The average is %.2f", average); */

        //No.2
        /*final int NUMBER_OF_QUESTIONS = 10;
        int correctCount = 0; 
        int count = 0; 
        long startTime = System.currentTimeMillis();
        String output = " "; 
        Scanner input = new Scanner(System.in);

        while (count < NUMBER_OF_QUESTIONS) {
            int number1 = (int)(Math.random() * 15 + 1);
            int number2 = (int)(Math.random() * 15 + 1);

            if (number1 < number2) {
                int temp = number1;
                number1 = number2;
                number2 = temp;
            }

            System.out.print(
                    "What is " + number1 + " – " + number2 + "? ");
            int answer = input.nextInt();

            if (number1 - number2 == answer) {
                System.out.println("You are correct!");
                correctCount++; // Increase the correct answer count
            } else {
                System.out.println("Your answer is wrong.\n" + number1
                        + " - " + number2 + " should be " + (number1 - number2));
            }
            count++;

            output += "\n" + number1 + "–" + number2 + "=" + answer +
                    ((number1 - number2 == answer) ? " correct": " wrong");

        }

        long endTime = System.currentTimeMillis();
        long testTime = endTime - startTime;

        System.out.println("Correct count is " + correctCount +
                "\nTest time is " + testTime / 1000 + " seconds\n" + output); */

        //No.3
        /*double oneKilo = 2.2;

        System.out.println("Kilograms" + "          " + "Pounds");
        for (int i = 1; i < 200; i += 2) {
            System.out.println(i + "          " + String.format("%.1f", i*oneKilo)); 
        } */

        //No.4
        /*double oneMile = 1.609;

        System.out.println("Miles" + "          " + "Kilometers");
        for (int i = 1; i < 11; i++) {
            System.out.println(i + "          " + String.format("%.3f", i*oneMile));
        } */

        //No.5
        /*double oneKilo = 2.2;
        System.out.printf("%-10s%-10s%-5s%-10s%-10s%n", "Kilograms", "Pounds", "|", "Pounds", "Kilograms");

        for (int i = 1, j = 20;(i< 200 && j < 516); i += 2, j += 5) {
                System.out.printf("%-10d%-10.1f%-5s%-10d%-10.2f%n", i, i * oneKilo, "|", j, j / oneKilo);
        } */

        //No.6
        /*double oneMile = 1.609;
        System.out.printf("%-10s%-10s%-5s%-10s%-10s%n", "Miles", "Kilometers", "|", "Kilometers", "Miles");

        for (int i = 1, j = 20; (i < 11 && j < 66); i++, j += 5) {
            System.out.printf("%-10d%-10.3f%-5s%-10d%-10.3f%n", i, i*oneMile, "|", j, j/oneMile);
        } */

        //No.7
        /*System.out.println("Please enter the current year tuition fee");
        int tuitionToday = input.nextInt();

        System.out.println("Please enter the how many year later would you like to go to uni");
        int numberOfYear = input.nextInt();

        int i = 0;
        while (i < numberOfYear ) {
            tuitionToday += tuitionToday * 0.05f;
            i++;
        }

        System.out.println("Tuition fee in " + numberOfYear + " year later is " + tuitionToday);

        int j = 0, sum = 0;
        while (j < 4) {
            tuitionToday += tuitionToday * 0.05f;
            sum += tuitionToday;
            j++;
        }
        System.out.println("Total tuiton fee is " + sum); */

        //No.8
        /*System.out.print("Enter the number of students: ");
        int numberOfStudents = input.nextInt();

        while (numberOfStudents < 1) {
            System.out.println("Please enter a valid number of students (at least 1): ");
            numberOfStudents = input.nextInt();
        }

        int highestScore = Integer.MIN_VALUE;
        String highestScoreStudent = "";

        for (int i = 1; i <= numberOfStudents; i++) {
            System.out.print("Enter the name of student " + i + ": ");
            String studentName = input.next();

            System.out.print("Enter the score of student " + i + ": ");
            int studentScore = input.nextInt();

            if (studentScore > highestScore) {
                highestScore = studentScore;
                highestScoreStudent = studentName;
            }
        }
        System.out.println("The student with the highest score is: " + highestScoreStudent);
        System.out.println("Their score is: " + highestScore);  */

        //No.9
        /*System.out.print("Enter the number of students: ");
        int numberOfStudents = input.nextInt();

        while (numberOfStudents < 2) {
            System.out.println("Please enter a valid number of students (at least 2): ");
            numberOfStudents = input.nextInt();
        }
        int highestScore = Integer.MIN_VALUE;
        int secondHighestScore = Integer.MIN_VALUE;
        String highestScoreStudent = "";
        String secondHighestScoreStudent = "";

        for (int i = 1; i <= numberOfStudents; i++) {
            System.out.print("Enter the name of student " + i + ": ");
            String studentName = input.next();

            System.out.print("Enter the score of student " + i + ": ");
            int studentScore = input.nextInt();

            if (studentScore > highestScore) {
                secondHighestScore = highestScore;
                secondHighestScoreStudent = highestScoreStudent;

                highestScore = studentScore;
                highestScoreStudent = studentName;

            } else if (studentScore > secondHighestScore) {
                secondHighestScore = studentScore;
                secondHighestScoreStudent = studentName;
            }
        }
        System.out.println("Student with the highest score: " + highestScoreStudent + " (Score: " + highestScore + ")");
        System.out.println("Student with the second-highest score: " + secondHighestScoreStudent + " (Score: " + secondHighestScore + ")"); */

        //No.10
        /*int count = 0;
        for (int i = 100; i <= 1000; i++) {
            if (i % 5 == 0 && i % 6 == 0) {
                System.out.print(i + " ");
                count++; 
                if (count == 10) {
                    System.out.println();
                    count = 0; 
                }
            }
        } */

        //No.11
        /*int count = 0;
        for (int i = 100; i <= 200; i++) {
            if (i % 5 == 0 ^ i % 6 == 0) {
                System.out.print(i + " ");
                count++;
                if (count == 10) {
                    System.out.println();
                    count = 0;
                }
            }
        } */

        //No.12
        /*int n = 0;
        while (n*n <= 12000) {
            n++;
        }
        System.out.println("Smalles n is " + n); */

        //No.13
        /*int n = 0;
        while (n*n*n < 12000) {
            n++;
        }
        n--;
        System.out.println("Largest n is " + n); */

        //No.14
        /*System.out.print("Enter first integer: ");
        int n1 = input.nextInt();
        System.out.print("Enter second integer: ");
        int n2 = input.nextInt();

        int gcd = 1; // Initial gcd is 1
        int k = 2; // Possible gcd

        while (k <= n1 && k <= n2) {
            if (n1 % k == 0 && n2 % k == 0)
                gcd = k;
            k++;
        }
        System.out.println("The greatest common divisor for " + n1 +
                " and " + n2 + " is " + gcd); */

        //No.15
        /*System.out.println("enter the beginning of ascii character :");
        String startString = input.nextLine();


        System.out.println("enter the last of ascii character :");
        String endString = input.nextLine();

        char startChar = startString.charAt(0);
        char endChar = endString.charAt(0);
        int count = 0;
        for (char k = startChar; k <= endChar;k++) {
            System.out.print(k + " ");
            count++;

            if (count == 10) {
                System.out.println();
                count = 0;
            }
        } */

        //No.16
        /*System.out.println("Enter the integer:  ");
        int number = input.nextInt();

        input.close();

        System.out.println("Smalles factors of " + number + ": " );
        smallestFactors(number);

    }
    public static void smallestFactors(int n) {
        int factor = 2;

        while (n > 1) {
            if (n % factor == 0) {
                System.out.print(factor + " ");
                n = n / factor;
            } else {
                factor++;

            }
        } */

        //No.17
        /*System.out.println("Enter the number of lines: ");
        int rows = input.nextInt();

        for (int i = 1; i <= rows; i++) {
            for (int k = rows - i; k > 0; k--) {
                System.out.print("  ");
            }
            for (int j = i;j >= 1 ; j--) {
                System.out.print(j + " ");
            }
            for (int s = 2; s <= i;s++) {
                System.out.print(s + " ");
            }
            System.out.println();
        } */

        //No.18
        /*System.out.println("Patern A");

        /*
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(j + " ");
            }
            System.out.println();
        }*/
        System.out.println("------------");
        /**/
        /*
        // Patern B
        */
        System.out.println("Patern B");
        /*
        for (int i = n; i >= 1; i--) {
            for (int j = 1; j <= i; j++) {
                System.out.print(j);
            }
            System.out.println();
        }
        */

        System.out.println("Patern C");
        /*
        for (int i = 1; i <= n; i++) {
            for (int j = 0;j < n - i; j++) {
                System.out.print("  ");
            }
            for (int k = i; k >= 1; k--) {
                System.out.print(k + " ");
            }
            System.out.println();
        }

        */
        System.out.println("Patern D");

        for (int row = 1; row <= 6; row++) {
            for (int space = 0; space <=row; space++) {
                System.out.print("  ");
            }
            for (int col = 1; col <= 6-row; col++) {
                System.out.print(col + " ");
            }

            System.out.println();
        } */

        //No.19
        /*System.out.println("Enter the number of lines: ");
        int rows = input.nextInt();

        for (int i = 1; i <= rows; i++) {
            for (int j = 1;j <= rows - i; j++) {
                System.out.print(" ");
            }
            System.out.println();
        } */

        //No.20
        /*int count = 0;
        for (int i = 2; i <= 1000; i++) {
            if (isPrime(i)) {
                System.out.print(i + " ");
                count++;
                if (count % 10 == 0) {
                    System.out.println();
                    count = 0;
                }
            }
        }
    }

    private static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false; 
            }
        }
        return true; */

        //No.21
        /*System.out.println("Enter the Loan Amount:");
        double loanAmount = input.nextDouble();

        System.out.println("Number of year:");
        int year = input.nextInt();

        System.out.printf("%-25s%-25s%-20s%n", "Interest Rate ", "Montly Payment", "Total Payment");

        for (float interestRate = 5.0f; interestRate <= 8.0f; interestRate += 0.125) {
            double monthlyPayment = (loanAmount * interestRate/1200) /
                    (1 - Math.pow((1 + interestRate/1200), -12*year));
            double totalPayment = monthlyPayment * 12 * year;
            System.out.printf("%-25.3f%-25.2f%-20.2f%n", interestRate, monthlyPayment, totalPayment);

        } */

        //No.22
        /*System.out.println("Enter the loan amount:");

        double loanAmount = input.nextDouble();

        System.out.println("Enter the number of years:");
        int numberOfYears = input.nextInt();

        System.out.println("Enter the annual interest rate (in percentage):");
        double annualInterestRate = input.nextDouble();

        double monthlyInterestRate = annualInterestRate / 100 / 12;
        int numberOfPayments = numberOfYears * 12;
        double monthlyPayment = loanAmount * monthlyInterestRate /
                (1 - 1 / Math.pow(1 + monthlyInterestRate, numberOfPayments));

        System.out.println("Monthly Payment: $" + monthlyPayment);
        System.out.println("Total Payment: $" + (monthlyPayment * numberOfPayments));
        System.out.println();

        double balance = loanAmount;
        for (int i = 1; i <= numberOfPayments; i++) {
            double interest = balance * monthlyInterestRate;
            double principal = monthlyPayment - interest;
            balance -= principal;

            System.out.printf("%d\t\t\t\t%.2f\t\t\t%.2f\t\t\t%.2f\n", i, interest, principal, balance);
        } */

        //No.23
        /*double sum = 0.0D;
        for (int i = 50000; i > 0; i--) {
            sum += 1.0 / i;
        }
        System.out.println(sum); */

        //No.24
        /*double sum = 0.0D;
        for (int i = 97; i>0; i =- 2) {
            sum += (double) i / (i + 2);
        }
        System.out.println(sum); */

        //No.25
        /*double sum = 0.0D;
        for (int i = 1; i <= 100000; i++) {
            double nominator = Math.pow(-1,i+1);
            double denominator = 2 * i - 1;
            sum += nominator / denominator;
        }
        System.out.println(sum*4); */

        //No.26
        /*double sum = 1;
        for (int i = 1; i <= 20; i++) {
            sum += 1 / factorial(i);
        }
        System.out.println(sum);
    }

    public static double factorial(int x) {
        int sum = 1;
        if (x == 0) {
            return 1;
        }
        if (x < 0) {
            return -1;
        }
        for (int i = x; i > 0; i--) {
            sum *= i;
        }
        return sum; */

        //No.27
        /*int counter = 0;
        for (int year = 101;year <= 2100;year++) {
            if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
                counter++;
                System.out.print(year + " ");
                if (counter == 9) {
                    counter = 0;
                    System.out.println();
                }

            }
        } */

        //No.28
        /*System.out.print("Enter the year: ");
        int year = input.nextInt();

        System.out.print("Enter the first day of the year (0 for Sunday, 1 for Monday, ..., 6 for Saturday): ");
        int firstDay = input.nextInt();

        String[] monthNames = {
                "January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
        };

        int[] monthDays = getMonthDays(year);

        int currentDay = firstDay;

        for (int month = 0; month < 12; month++) {
            System.out.printf("%s 1, %d is %s%n", monthNames[month], year, getDayName(currentDay));

            currentDay = (currentDay + monthDays[month]) % 7;
        }

    }

    private static String getDayName(int currentDay) {
        String[] days = {
                "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
        };
        return days[currentDay];
    }

    private static int[] getMonthDays(int year) {
        return new int[] {
                31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
        };
    }

    private static boolean isLeapYear(int year) {
        return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0); */

        //No.29
        /*System.out.print("Enter the year: ");
        int year = input.nextInt();
        System.out.print("Enter the first day of the year (0 for Sunday, 1 for Monday, ..., 6 for Saturday): ");
        int firstDay = input.nextInt();

        
        String[] months = {
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        };

        int[] daysInMonth = {
            31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
        };

        if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
            daysInMonth[1] = 29;
        }

        for (int month = 0; month < 12; month++) {
            System.out.println("\n        " + months[month] + " " + year);
            System.out.println("Sun Mon Tue Wed Thu Fri Sat");

            for (int i = 0; i < firstDay; i++) {
                System.out.print("    ");

            for (int day = 1; day <= daysInMonth[month]; day++) {
                System.out.printf("%3d ", day);

                if ((day + firstDay) % 7 == 0 || day == daysInMonth[month]) {
                    System.out.println();
                }
            }

            firstDay = (firstDay + daysInMonth[month]) % 7;
        } */

        //No.30
        /*System.out.print("Enter the monthly saving amount: ");
        double amount = input.nextDouble();
        System.out.print("Enter the annual interest rate (e.g., 5 for 5%): ");
        double annualInterestRate = input.nextDouble();
        System.out.print("Enter the number of months: ");
        int months = input.nextInt();

        double monthlyInterestRate = annualInterestRate / 1200;
        double totalAmount = 0;

        for (int i = 1; i <= months; i++) {
            totalAmount = (amount + totalAmount) * (1 + monthlyInterestRate);
            System.out.printf("Amount after month %d: $%.2f\n", i, totalAmount);
        } */

        //No.31
        /*System.out.print("Enter the initial deposit amount: ");
        double amount = input.nextDouble();
        System.out.print("Enter annual percentage yield: ");
        double annualYield = input.nextDouble();
        System.out.print("Enter maturity period (number of months): ");
        int months = input.nextInt();

        double monthlyYield = annualYield / 1200;

        System.out.println("Month  CD Value");

        for (int i = 1; i <= months; i++) {
            amount += amount * monthlyYield;
            System.out.printf("%-7d%.2f\n", i, amount);
        } */

        //No.32
        /*int lotteryDigit1 = (int)(Math.random() * 10);
        int lotteryDigit2;
        do {
            lotteryDigit2 = (int)(Math.random() * 10);
        } while (lotteryDigit2 == lotteryDigit1);

        int lotteryNumber = lotteryDigit1 * 10 + lotteryDigit2;

        Scanner input = new Scanner(System.in);
        System.out.print("Enter your lottery pick (two digits): ");
        int guess = input.nextInt();

        int guessDigit1 = guess / 10;
        int guessDigit2 = guess % 10;

        System.out.println("The lottery number is " + lotteryNumber);

        if (guess == lotteryNumber) {
            System.out.println("Exact match: you win $10,000");
        } else if (guessDigit1 == lotteryDigit2 && guessDigit2 == lotteryDigit1) {
            System.out.println("Match all digits: you win $3,000");
        } else if (guessDigit1 == lotteryDigit1 || guessDigit1 == lotteryDigit2
                || guessDigit2 == lotteryDigit1 || guessDigit2 == lotteryDigit2) {
            System.out.println("Match one digit: you win $1,000");
        } else {
            System.out.println("Sorry, no match");
        } */

        //No.33
        /*System.out.println("Perfect numbers between 1 and 10000:");

        for (int i = 1; i <= 10000; i++) {
            if (isPerfect(i)) {
                System.out.println(i);
            }
        }
    }

    public static boolean isPerfect(int number) {
        int sum = 0;
        for (int i = 1; i < number; i++) {
            if (number % i == 0) {
                sum += i;
            }
        }
        return sum == number; */

        //No.34
        /*int userWins = 0;
        int computerWins = 0;

        while (Math.abs(userWins - computerWins) <= 2) {
            int computerChoice = (int)(Math.random() * 3);

            System.out.print("Enter 0 for scissor, 1 for rock, 2 for paper: ");
            int userChoice = input.nextInt();

            String result;
            if (userChoice == computerChoice) {
                result = "It is a draw";
            } else if ((userChoice == 0 && computerChoice == 2) ||
                       (userChoice == 1 && computerChoice == 0) ||
                       (userChoice == 2 && computerChoice == 1)) {
                result = "You win";
                userWins++;
            } else {
                result = "Computer wins";
                computerWins++;
            }

            System.out.println(result + ". You: " + userWins + " Computer: " + computerWins);
        }

        if (userWins > computerWins) {
            System.out.println("You win the game!");
        } else {
            System.out.println("Computer wins the game!");
        } */

        //No.35
        /*for (int i = 1; i < 625;i++) {
            double sum = 0.0D;
            double result = (double) 1 / (Math.sqrt(i) + Math.sqrt(i + 1));

        } */

        //No.36
        /*System.out.print("Enter the first 12 digits of an ISBN-13 as a string: ");
        String isbn = input.nextLine();

        if (isbn.length() != 12) {
            System.out.println(isbn + " is an invalid input");
            return;
        }

        int sum = 0;
        for (int i = 0; i < 12; i++) {
            int digit = Character.getNumericValue(isbn.charAt(i));
            sum += (i % 2 == 0) ? digit : 3 * digit;
        }

        int checksum = 10 - (sum % 10);
        if (checksum == 10) checksum = 0;

        System.out.println("The ISBN-13 number is " + isbn + checksum); */

        //No.37
        /*System.out.print("Enter a decimal integer: ");
        int decimal = input.nextInt();

        String binary = "";
        while (decimal > 0) {
            binary = (decimal % 2) + binary;
            decimal /= 2;
        }

        System.out.println("Binary value: " + binary); */

        //No.38
        /*System.out.print("Enter a decimal integer: ");
        int decimal = input.nextInt();

        String octal = "";
        while (decimal > 0) {
            octal = (decimal % 8) + octal;
            decimal /= 8;
        }
        System.out.println("Octal value: " + octal); */

        //No.39
        /*double commissionSought = 30000;
        double baseSalary = 5000;
        double commission = 0;
        double salesAmount = 0;

        while (commission < commissionSought) {
            salesAmount += 0.01;
            commission = 0;

            if (salesAmount > 10000) {
                commission += (salesAmount - 10000) * 0.12;
                salesAmount = 10000;
            }
            if (salesAmount > 5000) {
                commission += (salesAmount - 5000) * 0.10;
                salesAmount = 5000;
            }
            commission += salesAmount * 0.08;
        }

        System.out.printf("Minimum sales needed: $%.2f\n", salesAmount); */

        //No.40
        /*int heads = 0, tails = 0;
        for (int i = 0; i < 1000000; i++) {
            if (Math.random() < 0.5) heads++;
            else tails++;
        }
        System.out.println("Heads: " + heads + ", Tails: " + tails); */

        //No.41
        /*System.out.print("Enter numbers: ");
        int max = 0, count = 0, num;

        do {
            num = input.nextInt();
            if (num == 0) break;
            if (num > max) {
                max = num;
                count = 1;
            } else if (num == max) {
                count++;
            }
        } while (num != 0);

        if (max == 0) {
            System.out.println("No numbers are entered except 0");
        } else {
            System.out.println("The largest number is " + max);
            System.out.println("The occurrence count of the largest number is " + count);
        } */

        //No.42
        /*System.out.print("Enter the commission sought: ");
        double commissionSought = input.nextDouble();
        double baseSalary = 5000;
        double commission = 0;
        double salesAmount = 0;

        for (; commission < commissionSought; salesAmount += 0.01) {
            commission = 0;
            double tempSales = salesAmount;

            if (tempSales > 10000) {
                commission += (tempSales - 10000) * 0.12;
                tempSales = 10000;
            }
            if (tempSales > 5000) {
                commission += (tempSales - 5000) * 0.10;
                tempSales = 5000;
            }
            commission += tempSales * 0.08;
        }

        System.out.printf("Minimum sales needed: $%.2f\n", salesAmount); */

        //No.43
        /*int count = 0;
        for (int i = 1; i <= 7; i++) {
            for (int j = i + 1; j <= 7; j++) {
                System.out.println(i + " " + j);
                count++;
            }
        }
        System.out.println("The total number of all combinations is " + count); */

        //No.44
        System.out.print("Enter an integer: ");
        short num = input.nextShort();

        System.out.print("The bits are ");
        for (int i = 15; i >= 0; i--) {
            System.out.print((num >> i) & 1);
        }
        System.out.println();

        //No.45
        /*System.out.print("Enter 10 numbers: ");
        double[] numbers = new double[10];
        for (int i = 0; i < 10; i++) {
            numbers[i] = input.nextDouble();
        }

        double sum = 0;
        for (double num : numbers) {
            sum += num;
        }
        double mean = sum / 10;

        double sumOfSquares = 0;
        for (double num : numbers) {
            sumOfSquares += Math.pow(num - mean, 2);
        }
        double deviation = Math.sqrt(sumOfSquares / 10);

        System.out.printf("The mean is %.2f\n", mean);
        System.out.printf("The standard deviation is %.5f\n", deviation); */

        //No.46
        /*System.out.print("Enter a string: ");
        String str = input.nextLine();

        String reversed = "";
        for (int i = str.length() - 1; i >= 0; i--) {
            reversed += str.charAt(i);
        }

        System.out.println("The reversed string is " + reversed); */

        //No.47
        /*System.out.print("Enter the first 12 digits of an ISBN-13 as a string: ");
        String isbn = input.nextLine();

        if (isbn.length() != 12) {
            System.out.println(isbn + " is an invalid input");
            return;
        }

        int sum = 0;
        for (int i = 0; i < 12; i++) {
            int digit = Character.getNumericValue(isbn.charAt(i));
            sum += (i % 2 == 0) ? digit : 3 * digit;
        }

        int checksum = 10 - (sum % 10);
        if (checksum == 10) checksum = 0;

        System.out.println("The ISBN-13 number is " + isbn + checksum); */

        //No.48
        /*System.out.print("Enter a string: ");
        String str = input.nextLine();

        for (int i = 0; i < str.length(); i += 2) {
            System.out.print(str.charAt(i));
        }
        System.out.println(); */

        //No.49
        /*System.out.print("Enter a string: ");
        String str = input.nextLine().toLowerCase();

        int vowels = 0, consonants = 0;
        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (ch >= 'a' && ch <= 'z') {
                if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
                    vowels++;
                } else {
                    consonants++;
                }
            }
        }

        System.out.println("The number of vowels is " + vowels);
        System.out.println("The number of consonants is " + consonants); */

        //No.50
        /*System.out.print("Enter a string: ");
        String str = input.nextLine();

        int count = 0;
        for (int i = 0; i < str.length(); i++) {
            if (Character.isUpperCase(str.charAt(i))) {
                count++;
            }
        }

        System.out.println("The number of uppercase letters is " + count); */

        //No.51
        /*System.out.print("Enter the first string: ");
        String str1 = input.nextLine();
        System.out.print("Enter the second string: ");
        String str2 = input.nextLine();

        StringBuilder commonPrefix = new StringBuilder();
        int minLength = Math.min(str1.length(), str2.length());

        for (int i = 0; i < minLength; i++) {
            if (str1.charAt(i) == str2.charAt(i)) {
                commonPrefix.append(str1.charAt(i));
            } else {
                break;
            }
        }

        if (commonPrefix.length() > 0) {
            System.out.println("The common prefix is " + commonPrefix.toString());
        } else {
            System.out.println(str1 + " and " + str2 + " have no common prefix");
        } */



    }

}
